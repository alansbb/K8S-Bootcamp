apiVersion: v1
kind: Service
metadata:
  name:  {{ .Values.MongoDb.ServiceName }}
spec:
  ports:
  - port: {{ .Values.MongoDb.ServicePort }}
  selector:
    app: {{ .Values.MongoDb.Name }}
    tier: data-tier
    environment: {{.Values.Global.Environment}}
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: {{.Values.MongoDb.Name}}
spec:
  replicas: {{.Values.MongoDb.Replicas}}
  minReadySeconds: 2
  template:
    metadata:
      labels:
        app:  {{ .Values.MongoDb.Name }}
        tier: data-tier
        environment: {{.Values.Global.Environment}}
    spec:
      containers:
      - name:  {{ .Values.MongoDb.Name }}
        image: {{ .Values.MongoDb.Image }}
        ports:
        - containerPort: {{ .Values.MongoDb.ContainerPort }}
        volumeMounts:
        - name: data
          mountPath: /data/db
      volumes:
      - name: data
        emptyDir: {}
#comment emptyDir above
#and uncomment the lines below to use PVCs and dynamic volume provisioning
#BECAREFUL about the spacing!
#What happens if you set the replica count > 1?

#        persistentVolumeClaim:
#          claimName: mongo-pvc
---
#kind: PersistentVolumeClaim
#apiVersion: v1
#metadata:
#  name: mongo-pvc
#spec:
#  accessModes:
#  - ReadWriteOnce
#  resources:
#    requests:
#      storage: 3Gi